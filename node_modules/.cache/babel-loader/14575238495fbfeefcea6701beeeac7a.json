{"ast":null,"code":"import _slicedToArray from \"S:\\\\react filer\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/Abouter\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  var _useState = useState('light'),\n    _useState2 = _slicedToArray(_useState, 2),\n    darker = _useState2[0],\n    setdarker = _useState2[1];\n  var red = function red() {\n    document.body.style.backgroundColor = \"red\";\n  };\n  var yellow = function yellow() {\n    document.body.style.backgroundColor = \"yellow\";\n  };\n  var green = function green() {\n    document.body.style.backgroundColor = \"green\";\n  };\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    alerter = _useState4[0],\n    setalert = _useState4[1];\n  var showalert = function showalert(message, type) {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(function () {\n      setalert(null);\n    }, 1000);\n  };\n  var toggler = function toggler() {\n    if (darker === 'light') {\n      setdarker('dark');\n      document.body.style.backgroundColor = \"#05132a\";\n      showalert(\"Dark Mode has been enabled!\", \"success\");\n      // setInterval(() => {\n      document.title = \"Dark mode Enabled\";\n      // }, 1700);  \n      //  setInterval(() => {\n\n      // }, 1500);   \n    } else {\n      setdarker('light');\n      document.body.style.backgroundColor = \"white\";\n      showalert(\"light Mode has been enabled!\", \"success\");\n      document.title = \"Light mode Enabled\";\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nexport default App;","map":{"version":3,"names":["React","useState","Navbar","About","TextForm","Alert","App","_useState","_useState2","_slicedToArray","darker","setdarker","red","document","body","style","backgroundColor","yellow","green","_useState3","_useState4","alerter","setalert","showalert","message","type","msg","setTimeout","toggler","title","createElement","Fragment"],"sources":["S:/react filer/my-app/src/App.js"],"sourcesContent":["import React , { useState } from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/Abouter\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n\n\n  const [darker,setdarker]=useState('light');\n  const red=()=>{\n    document.body.style.backgroundColor=\"red\";\n  }\n  const yellow=()=>{\n    document.body.style.backgroundColor=\"yellow\";\n  }\n  const green=()=>{\n    document.body.style.backgroundColor=\"green\";\n  }\n  const [alerter,setalert]=useState(null);\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1000);\n  }\n  const toggler=()=>{\n    if(darker==='light'){\n      setdarker('dark');\n      document.body.style.backgroundColor=\"#05132a\";\n      showalert(\"Dark Mode has been enabled!\",\"success\");\n      // setInterval(() => {\n        document.title=\"Dark mode Enabled\";\n      // }, 1700);  \n      //  setInterval(() => {\n      \n      // }, 1500);   \n      }\n      else{\n        setdarker('light');\n        document.body.style.backgroundColor=\"white\";\n        showalert(\"light Mode has been enabled!\",\"success\")     \n        document.title=\"Light mode Enabled\";\n     \n    }\n    \n  }\n  return (\n    <> \n    {/*  */}\n</>\n  );\n}\nexport default App; \n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAKC,QAAQ,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AACA;AACA;AACA;AACA;;AAGA,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,SAAA,GAIYN,QAAQ,CAAC,OAAO,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,MAAM,GAAAF,UAAA;IAACG,SAAS,GAAAH,UAAA;EACvB,IAAMI,GAAG,GAAC,SAAJA,GAAGA,CAAA,EAAK;IACZC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,KAAK;EAC3C,CAAC;EACD,IAAMC,MAAM,GAAC,SAAPA,MAAMA,CAAA,EAAK;IACfJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,QAAQ;EAC9C,CAAC;EACD,IAAME,KAAK,GAAC,SAANA,KAAKA,CAAA,EAAK;IACdL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;EAC7C,CAAC;EAAA,IAAAG,UAAA,GACwBlB,QAAQ,CAAC,IAAI,CAAC;IAAAmB,UAAA,GAAAX,cAAA,CAAAU,UAAA;IAAhCE,OAAO,GAAAD,UAAA;IAACE,QAAQ,GAAAF,UAAA;EACvB,IAAMG,SAAS,GAAC,SAAVA,SAASA,CAAEC,OAAO,EAACC,IAAI,EAAG;IAC9BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,YAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EACD,IAAMM,OAAO,GAAC,SAARA,OAAOA,CAAA,EAAK;IAChB,IAAGlB,MAAM,KAAG,OAAO,EAAC;MAClBC,SAAS,CAAC,MAAM,CAAC;MACjBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,SAAS;MAC7CO,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;MAClD;MACEV,QAAQ,CAACgB,KAAK,GAAC,mBAAmB;MACpC;MACA;;MAEA;IACA,CAAC,MACG;MACFlB,SAAS,CAAC,OAAO,CAAC;MAClBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CO,SAAS,CAAC,8BAA8B,EAAC,SAAS,CAAC;MACnDV,QAAQ,CAACgB,KAAK,GAAC,oBAAoB;IAEvC;EAEF,CAAC;EACD,oBACE7B,KAAA,CAAA8B,aAAA,CAAA9B,KAAA,CAAA+B,QAAA,MAEF,CAAC;AAEH;AACA,eAAezB,GAAG"},"metadata":{},"sourceType":"module"}