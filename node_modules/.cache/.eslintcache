[{"S:\\react filer\\my-app\\src\\index.js":"1","S:\\react filer\\my-app\\src\\reportWebVitals.js":"2","S:\\react filer\\my-app\\src\\App.js":"3","S:\\react filer\\my-app\\src\\components\\Navbar.js":"4","S:\\react filer\\my-app\\src\\components\\TextForm.js":"5","S:\\react filer\\my-app\\src\\components\\abouter.js":"6","S:\\react filer\\my-app\\src\\components\\Abouter.js":"7","S:\\react filer\\my-app\\src\\components\\alert.js":"8","S:\\react filer\\my-app\\src\\components\\Alert.js":"9"},{"size":535,"mtime":1690223579751,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1690223579923,"results":"12","hashOfConfig":"11"},{"size":1882,"mtime":1691044542945,"results":"13","hashOfConfig":"11"},{"size":2582,"mtime":1690970118701,"results":"14","hashOfConfig":"11"},{"size":2620,"mtime":1690881347321,"results":"15","hashOfConfig":"11"},{"size":4356,"mtime":1690546358632,"results":"16","hashOfConfig":"11"},{"size":4357,"mtime":1690809448142,"results":"17","hashOfConfig":"11"},{"size":371,"mtime":1690872865277,"results":"18","hashOfConfig":"11"},{"size":440,"mtime":1690880427220,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"udsgom",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"S:\\react filer\\my-app\\src\\index.js",[],[],[],"S:\\react filer\\my-app\\src\\reportWebVitals.js",[],[],"S:\\react filer\\my-app\\src\\App.js",[],[],"S:\\react filer\\my-app\\src\\components\\Navbar.js",["49","50","51","52"],[],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function  Navbar(props) {\r\nfunction color(colors){\r\n    document.body.style.backgroundColor=colors;\r\n}\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.Abouttext}</a>\r\n            </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-3\" type=\"search\" placeholder=\"Search Here\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n         <div className=\"form-check form-switch mx-2 \">\r\n           \r\n        </div>\r\n      <div className=\"dropdown mx-4\">\r\n  <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n    Colored Background\r\n  </button>\r\n  <ul className=\"dropdown-menu\">\r\n    <li><a className=\"dropdown-item\" onClick={props.red} href=\"#\">Red</a></li>\r\n    <li><a className=\"dropdown-item\" onClick={props.yellow} href=\"#\">Yellow</a></li>\r\n    <li><a className=\"dropdown-item\" onClick={props.green} href=\"#\">Green</a></li>\r\n  </ul>\r\n</div>\r\n            <div className=\"form-check form-switch mx-2\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggle} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className={`form-check-label text-${props.mode==='dark'?'light':'dark'}`} htmlFor=\"flexSwitchCheckDefault\" >{props.mode} mode</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </nav>   \r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n    Abouttext:PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps={\r\n    title:\"This is default\",\r\n    Abouttext:\"This is default\"\r\n}\r\n","S:\\react filer\\my-app\\src\\components\\TextForm.js",[],[],"S:\\react filer\\my-app\\src\\components\\abouter.js",[],[],"S:\\react filer\\my-app\\src\\components\\Abouter.js",[],[],"S:\\react filer\\my-app\\src\\components\\alert.js",[],[],"S:\\react filer\\my-app\\src\\components\\Alert.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":15},{"ruleId":"57","severity":1,"message":"58","line":36,"column":9,"nodeType":"59","endLine":36,"endColumn":67},{"ruleId":"57","severity":1,"message":"58","line":37,"column":9,"nodeType":"59","endLine":37,"endColumn":70},{"ruleId":"57","severity":1,"message":"58","line":38,"column":9,"nodeType":"59","endLine":38,"endColumn":69},"no-unused-vars","'color' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]