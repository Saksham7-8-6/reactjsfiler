{"version":3,"sources":["components/Navbar.js","components/Abouter.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","NavLink","aria-current","to","Abouttext","role","placeholder","onClick","toggle","aria-checked","htmlFor","Abouter","_useState","useState","color","backgroundColor","_useState2","_slicedToArray","styler","mystyle","_useState3","_useState4","apadder","mypadder","Fragment","style","data-bs-parent","document","body","TextForm","text","settext","heading","value","rows","onChange","event","target","conti","toUpperCase","alertor","toLowerCase","getElementById","select","setSelectionRange","navigator","clipboard","writeText","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","length","split","defaultProps","Alert","capitalize","word","lower","charAt","slice","alert","App","darker","setdarker","alerter","setalert","showalert","message","setTimeout","BrowserRouter","red","yellow","green","Routes","Route","path","element","About","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.5e6c608f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nexport default function  Navbar(props) {\r\n// function color(colors){\r\n//     document.body.style.backgroundColor=colors;\r\n// }\r\n\r\n\r\n  return (\r\n    \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\".\" >{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n            <NavLink className=\"nav-NavLink mx-2\"  aria-current=\"page\" to=\"/\">Home</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n            <NavLink className=\"nav-NavLink\" to=\"/about\">{props.Abouttext}</NavLink>\r\n            </li>\r\n        </ul>\r\n        <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-3\" type=\"search\" placeholder=\"Search Here\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n      \r\n      {/* <div className=\"dropdown mx-4\">\r\n        <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          Colored Background\r\n        </button>\r\n        <ul className=\"dropdown-menu\">\r\n          <li><a className=\"dropdown-item\" onClick={props.red} href=\"#\">Red</a></li>\r\n          <li><a className=\"dropdown-item\" onClick={props.yellow} href=\"#\">Yellow</a></li>\r\n          <li><a className=\"dropdown-item\" onClick={props.green} href=\"#\">Green</a></li>\r\n        </ul>\r\n      </div> */}\r\n            <div className=\"form-check form-switch mx-2\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggle} role=\"switch\" id=\"flexSwitchCheckDefault\"  aria-checked=\"false\"/>\r\n                <label className={`form-check-label text-${props.mode==='dark'?'light':'dark'}`} htmlFor=\"flexSwitchCheckDefault\" >{props.mode} mode</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </nav>   \r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n    Abouttext:PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps={\r\n    title:\"This is default\",\r\n    Abouttext:\"This is default\"\r\n}\r\n","// use the variable above the return and always make sure use the differnt names of the js file and not be present in the anyone of the folder ( name,var, value etc)\r\nimport { useState } from \"react\"\r\nimport React from 'react'\r\nexport default function Abouter() {\r\n  const [styler, mystyle] = useState({\r\n    color:\"white\" ,\r\n    backgroundColor:\"#05132a\"\r\n  })\r\n\r\nconst [apadder, mypadder] = useState(\"Enable Dark Mode\")\r\nconst toggleclick=()=>{\r\n  if(styler.color==='white'){\r\n      mystyle({\r\n        color:'#05132a',  \r\n        backgroundColor:'white'\r\n      })\r\n      document.body.style.backgroundColor='white'\r\n      mypadder(\"Enable Light Mode\")\r\n  }\r\n  else{\r\n    mystyle({\r\n        color:'white',\r\n        backgroundColor:'#05132a'\r\n      })\r\n      document.body.style.backgroundColor='#05132a'\r\n      mypadder(\"Enable Dark Mode\")\r\n  }\r\n}\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={styler}>\r\n      <h2 className='my-3'>About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\" style={styler}>\r\n          <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button\" style={styler} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={styler}>\r\n          <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" style={styler} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={styler}>\r\n          <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" style={styler} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" style={styler} data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n</div>\r\n<div className=\"container\">\r\n  <button type=\"button\" onClick={toggleclick} className=\"btn btn-primary my-2\">{apadder}</button>\r\n</div>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","import React ,{useState}from 'react'\r\n// var i=1;\r\nexport default function TextForm(props) {\r\n  \r\n  const handleupclick=()=>{\r\n    // console.log(\"Uppercase was clicked\" + text);  \r\n    var conti=text.toUpperCase();\r\n    props.alertor(\"Uppercase changed!\",\"success\")\r\n    settext(conti);\r\n  }\r\n  const handlelowclick=()=>{\r\n    // console.log(\"Lowercase was clicked\" + text);  \r\n    var conti=text.toLowerCase();\r\n    props.alertor(\"Lowercase changed!\",\"success\")\r\n    settext(conti);\r\n  }\r\n\r\n  const handleCopy =() => {\r\n    var text=document.getElementById(\"mybox\");\r\n    text.select();\r\n    text.setSelectionRange(0,99999);\r\n      navigator.clipboard.writeText(text.value);\r\n  }\r\n\r\n  const speak = () => {\r\n  let msg = new SpeechSynthesisUtterance();\r\n  msg.text = text;\r\n  window.speechSynthesis.speak(msg);\r\n}\r\n\r\n  const handleclearclick=()=>{\r\n    var conti=(\"\");\r\n    settext(conti);\r\n    props.alertor(\"Text Clear!\",\"success\")\r\n  }\r\n  const handleonchange=(event)=>{\r\n    // console.log(\"handle on change event fire \"+ i);\r\n    // i++;\r\n    settext(event.target.value);  // is used to render the text else will not change the text\r\n  }\r\n   const [text, settext] = useState(\"Enter Text here\");\r\n  //  text=\"there\"                 // wrong way to change the text\r\n\r\n\r\n   return (\r\n    <div>\r\n      <div className=\"container\"  style={{color:props.mode==='light'?'black':'white'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'#0d2245':'white',color:props.mode==='dark'?'white':'black'}} value  ={text} id=\"mybox\" rows=\"5\" onChange={handleonchange}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleupclick} >Convert to Uppercase</button>  \r\n        <button className=\"btn btn-primary mx-2\" onClick={handlelowclick} >Convert to Lowercase</button>  \r\n        <button className=\"btn btn-primary mx-2\" onClick={handleclearclick} >Clear Content</button>  \r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy} >Copy</button>  \r\n        <button type=\"submit\" onClick={speak} className=\"btn btn-warning mx-2 my-2\">Speak</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}} >\r\n        <h2>Your text summary</h2>\r\n        <p>{text.length>0?text.split(\" \").length:0} words and {text.length} letter</p>\r\n        <p>{0.008*text.split(\" \").length} minutes</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:\"Enter Something in the Text-Box !\"}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  function capitalize(word){\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n}\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {capitalize(props.alert.msg)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React,{ useState } from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/Abouter\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n\nimport {BrowserRouter,Route,Routes} from \"react-router-dom\";\n\nfunction App() {\n\n\n\n  const [darker,setdarker]=useState('light');\n  const red=()=>{\n    document.body.style.backgroundColor=\"red\";\n  }\n  const yellow=()=>{\n    document.body.style.backgroundColor=\"yellow\";\n  }\n  const green=()=>{\n    document.body.style.backgroundColor=\"green\";\n  }\n  const [alerter,setalert]=useState(null);\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1000);\n  }\n  const toggler=()=>{\n    if(darker==='light'){\n      setdarker('dark');\n      document.body.style.backgroundColor=\"#05132a\";\n      showalert(\"Dark Mode has been enabled!\",\"success\");\n      // setInterval(() => {\n        document.title=\"Dark mode Enabled\";\n      // }, 1700);  \n      //  setInterval(() => {\n      \n      // }, 1500);   \n      }\n      else{\n        setdarker('light');\n        document.body.style.backgroundColor=\"white\";\n        showalert(\"light Mode has been enabled!\",\"success\")     \n        document.title=\"Light mode Enabled\";\n     \n    }\n    \n  }\n  return (\n    <> <BrowserRouter>   \n    <Navbar title=\"TextUtils\" Abouttext=\"About\" mode={darker} toggle={toggler} red={red} yellow={yellow} green={green}/>\n    <Alert alert={alerter}/>\n    <div className=\"container my-3\">\n   \n     <Routes>\n          <Route path=\"/about\" element={<About />}/>\n          <Route path=\"/\" element={<TextForm heading=\"TextUtils\" mode={darker} alertor={showalert}/>}/>   \n        </Routes>\n     </div> \n     </BrowserRouter>\n \n\n</>\n  );\n}\nexport default App; \n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}